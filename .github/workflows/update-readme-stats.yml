name: Update README stats
on:
  schedule:
    - cron: '0 7 * * *'   # roda todo dia Ã s 07:00 UTC
  workflow_dispatch:       # permite rodar manualmente

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Update README with GitHub stats
        uses: actions/github-script@v6
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const login = owner;

            const now = new Date();
            const from = new Date(now.getFullYear(), 0, 1).toISOString();
            const to = new Date(now.getFullYear(), 11, 31, 23, 59, 59).toISOString();

            const q = `
              query($login:String!, $from:DateTime!, $to:DateTime!) {
                user(login:$login) {
                  contributionsCollection(from:$from, to:$to) {
                    totalCommitContributions
                    totalIssueContributions
                    totalPullRequestContributions
                    contributionCalendar { totalContributions }
                  }
                }
              }
            `;
            const resp = await github.graphql(q, { login, from, to });
            const cc = resp.user.contributionsCollection;
            const commits = cc.totalCommitContributions || 0;
            const prs = cc.totalPullRequestContributions || 0;
            const issues = cc.totalIssueContributions || 0;
            const contributedLastYear = cc.contributionCalendar?.totalContributions || 0;

            const repos = await github.paginate("GET /users/{username}/repos", { username: login, per_page: 100 });
            const totalStars = repos.reduce((s, r) => s + (r.stargazers_count || 0), 0);

            const path = 'README.md';
            const contentResp = await github.repos.getContent({ owner, repo, path });
            const buff = Buffer.from(contentResp.data.content, 'base64').toString('utf8');

            const startTag = '<!-- STATS-START -->';
            const endTag = '<!-- STATS-END -->';

            if (!buff.includes(startTag) || !buff.includes(endTag)) {
              core.setFailed('README.md nÃ£o tem os marcadores <!-- STATS-START --> e <!-- STATS-END -->');
              return;
            }

            const before = buff.split(startTag)[0];
            const after = buff.split(endTag)[1];

            const newStats = `
${startTag}
**ðŸ“Š GitHub Stats (auto atualizados)**

- **Total commits (este ano):** ${commits}
- **Total PRs (este ano):** ${prs}
- **Total Issues (este ano):** ${issues}
- **Total stars (todos os repositÃ³rios):** ${totalStars}
- **Contributed (last year):** ${contributedLastYear}

${endTag}
`;

            const newReadme = before + newStats + after;

            await github.repos.createOrUpdateFileContents({
              owner,
              repo,
              path,
              message: 'chore: atualizar estatÃ­sticas do README',
              content: Buffer.from(newReadme, 'utf8').toString('base64'),
              sha: contentResp.data.sha
            });

            console.log('README atualizado com sucesso');
